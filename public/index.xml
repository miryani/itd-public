<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Welcome on DMD ITD Public Site</title>
    <link>http://example.org/</link>
    <description>Recent content in Welcome on DMD ITD Public Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 24 Jan 2020 15:11:09 -0600</lastBuildDate>
    
	<atom:link href="http://example.org/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Creating a New Theme</title>
      <link>http://example.org/posts/creating-a-new-theme/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&#39;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&#39;t cover using CSS to style your theme.
We&#39;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>Migrate to Hugo from Jekyll</title>
      <link>http://example.org/posts/migrate-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/migrate-from-jekyll/</guid>
      <description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png  should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png  Additionally, you&#39;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description>
    </item>
    
    <item>
      <title>Contact ITD</title>
      <link>http://example.org/docs/table-of-contents/contact-itd/</link>
      <pubDate>Fri, 24 Jan 2020 15:11:09 -0600</pubDate>
      
      <guid>http://example.org/docs/table-of-contents/contact-itd/</guid>
      <description>You may contact us by sending emails through: helpdesk at dmdconnects dot com </description>
    </item>
    
    <item>
      <title>Okta Reset/Change Password</title>
      <link>http://example.org/docs/table-of-contents/okta-change-password/</link>
      <pubDate>Fri, 24 Jan 2020 11:25:00 -0600</pubDate>
      
      <guid>http://example.org/docs/table-of-contents/okta-change-password/</guid>
      <description>How-to Enable Reset Password Through Okta Feature and Use It This document explains how-to enable Reset Password feature on Okta and how-to use it.
 Note
Resetting/updating password through Okta will be propagated into Active Directory and Email Server, immediately. Therefor; Okta, Active Directory and Email accounts eventually will have the same password. To sync your laptop password with the new password in real-time, the VPN must be connected, otherwise; the old password must be used to login into laptop (either Windows or macOS).</description>
    </item>
    
    <item>
      <title>SSH Keys for Secure FTP #2</title>
      <link>http://example.org/docs/table-of-contents/sftp-ssh2/</link>
      <pubDate>Thu, 23 Jan 2020 09:24:33 -0600</pubDate>
      
      <guid>http://example.org/docs/table-of-contents/sftp-ssh2/</guid>
      <description>Generating a Secure Shell (SSH) Public/Private Key Pair Several tools exist to generate SSH public/private key pairs. The following sections illustrate how to generate an SSH key pair on Windows and UNIX, UNIX-like platforms.
 Steps to Generate SSH Key Pair Windows  Generating an SSH Key Pair on Windows Using the PuTTYgen Program The PuTTYgen program is part of PuTTY, an open source networking client for the Windows platform. To generate an SSH key pair on Windows using the PuTTYgen program:</description>
    </item>
    
    <item>
      <title>ITD Page One</title>
      <link>http://example.org/docs/table-of-contents/page-one/</link>
      <pubDate>Sun, 18 Nov 2018 09:24:33 -0600</pubDate>
      
      <guid>http://example.org/docs/table-of-contents/page-one/</guid>
      <description>ITD Page One Welcome to &amp;ldquo;Page One&amp;rdquo;, a brief guide to getting started with the many technologies and tools available to you at DMD.
This guide is provided by the DMD IT &amp;amp; DevOps team, or ITD for short. There are many other training and how-to guides available to you, but this should get you up and running as quickly as possible, and then point you to the resources available for further information.</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>http://example.org/posts/goisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/goisforlovers/</guid>
      <description>Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.
This document is a brief primer on using Go templates.</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>http://example.org/posts/hugoisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/hugoisforlovers/</guid>
      <description>Step 1. Install Hugo Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
 Clone the Hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:</description>
    </item>
    
  </channel>
</rss>